{
  "name": "Docker from Docker",
  "dockerFile": "Dockerfile",
  "runArgs": ["--init"],
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
    "source=${localEnv:HOME}${localEnv:USERPROFILE}/.gcp,target=/home/vscode/.gcp,type=bind,consistency=cached",
    "source=${localEnv:HOME}${localEnv:USERPROFILE}/.kube,target=/home/vscode/.kube,type=bind,consistency=cached"
  ],
  "overrideCommand": false,

  // Use this environment variable if you need to bind mount your local source code into a new container.
  "remoteEnv": {
    "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
  },

  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        "ms-azuretools.vscode-docker",
        "ms-toolsai.jupyter",
        "pomdtr.excalidraw-editor",
        "visualstudioexptteam.vscodeintellicode",
        "ms-vsliveshare.vsliveshare",
        "davidanson.vscode-markdownlint",
        "esbenp.prettier-vscode",
        "ms-python.vscode-pylance",
        "ms-python.python",
        "stkb.rewrap",
        "vscodevim.vim"
      ]
    },
    // TODO(bjb): this doesnt work
    "postCreateCommand": "pip3 install -r requirements.txt && python3 -m ipykernel install --user"
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],

    // Use 'postCreateCommand' to run commands after the container is created.

    // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
    // "remoteUser": "vscode"
  }
}
