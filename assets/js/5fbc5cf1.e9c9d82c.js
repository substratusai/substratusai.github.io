"use strict";(self.webpackChunksubstratus_website=self.webpackChunksubstratus_website||[]).push([[207],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>N});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},s="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),s=p(a),u=r,N=s["".concat(d,".").concat(u)]||s[u]||k[u]||l;return a?n.createElement(N,i(i({ref:t},m),{},{components:a})):n.createElement(N,i({ref:t},m))}));function N(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[s]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7480:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const l={},i="API Reference",o={unversionedId:"api",id:"api",title:"API Reference",description:"API Version: substratus.ai/v1",source:"@site/docs/api.md",sourceDirName:".",slug:"/api",permalink:"/docs/api",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/installation"}},d={},p=[{value:"Resources",id:"resources",level:2},{value:"Types",id:"types",level:2},{value:"ComputeType",id:"computetype",level:3},{value:"Dataset",id:"dataset",level:3},{value:"DatasetSource",id:"datasetsource",level:3},{value:"DatasetSpec",id:"datasetspec",level:3},{value:"DatasetStatus",id:"datasetstatus",level:3},{value:"GitSource",id:"gitsource",level:3},{value:"Model",id:"model",level:3},{value:"ModelCompute",id:"modelcompute",level:3},{value:"ModelServer",id:"modelserver",level:3},{value:"ModelServerSpec",id:"modelserverspec",level:3},{value:"ModelServerStatus",id:"modelserverstatus",level:3},{value:"ModelSize",id:"modelsize",level:3},{value:"ModelSource",id:"modelsource",level:3},{value:"ModelSpec",id:"modelspec",level:3},{value:"ModelStatus",id:"modelstatus",level:3},{value:"ModelTraining",id:"modeltraining",level:3},{value:"ModelTrainingParams",id:"modeltrainingparams",level:3},{value:"Notebook",id:"notebook",level:3},{value:"NotebookSpec",id:"notebookspec",level:3},{value:"NotebookStatus",id:"notebookstatus",level:3}],m={toc:p},s="wrapper";function k(e){let{components:t,...a}=e;return(0,r.kt)(s,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api-reference"},"API Reference"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"API Version: substratus.ai/v1")),(0,r.kt)("p",null,"Package v1 contains API Schema definitions for Substratus."),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dataset"},"Dataset")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#model"},"Model")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#modelserver"},"ModelServer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#notebook"},"Notebook"))),(0,r.kt)("h2",{id:"types"},"Types"),(0,r.kt)("h3",{id:"computetype"},"ComputeType"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Underlying type:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#modelcompute"},"ModelCompute"))),(0,r.kt)("h3",{id:"dataset"},"Dataset"),(0,r.kt)("p",null,"The Dataset API is used to describe data that can be referenced for training Models. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Datasets pull in remote data sources using containerized data loaders. "),(0,r.kt)("li",{parentName:"ul"},"Users can specify their own ETL logic by referencing a repository from a Dataset. "),(0,r.kt)("li",{parentName:"ul"},"Users can leverage pre-built data loader integrations with various sources. "),(0,r.kt)("li",{parentName:"ul"},"Training typically requires a large dataset. The Dataset API pulls a dataset once and stores it in a bucket, which is mounted directly into training Jobs. "),(0,r.kt)("li",{parentName:"ul"},"The Dataset API allows users to query ready-to-use datasets (",(0,r.kt)("inlineCode",{parentName:"li"},"kubectl get datasets"),"). "),(0,r.kt)("li",{parentName:"ul"},"The Dataset API allows Kubernetes RBAC to be applied as a mechanism for controlling access to data.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"apiVersion")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"substratus.ai/v1"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"kind")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Dataset"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"metadata")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#objectmeta-v1-meta"},"ObjectMeta"))),(0,r.kt)("td",{parentName:"tr",align:null},"Refer to Kubernetes API documentation for fields of ",(0,r.kt)("inlineCode",{parentName:"td"},"metadata"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"spec")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#datasetspec"},"DatasetSpec"))),(0,r.kt)("td",{parentName:"tr",align:null},"Spec is the desired state of the Dataset.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"status")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#datasetstatus"},"DatasetStatus"))),(0,r.kt)("td",{parentName:"tr",align:null},"Status is the observed state of the Dataset.")))),(0,r.kt)("h3",{id:"datasetsource"},"DatasetSource"),(0,r.kt)("p",null,"DatasetSource if a reference to the code that is doing the data sourcing."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#datasetspec"},"DatasetSpec"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#gitsource"},"GitSource"))),(0,r.kt)("td",{parentName:"tr",align:null},"Git is a reference to the git repository that contains the data loading code.")))),(0,r.kt)("h3",{id:"datasetspec"},"DatasetSpec"),(0,r.kt)("p",null,"DatasetSpec defines the desired state of Dataset."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dataset"},"Dataset"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"filename")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Filename is the name of the file when it is downloaded.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"source")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#datasetsource"},"DatasetSource"))),(0,r.kt)("td",{parentName:"tr",align:null},"Source if a reference to the code that is doing the data sourcing.")))),(0,r.kt)("h3",{id:"datasetstatus"},"DatasetStatus"),(0,r.kt)("p",null,"DatasetStatus defines the observed state of Dataset."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#dataset"},"Dataset"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"url")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"URL points to the underlying data storage (bucket URL).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"conditions")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#condition-v1-meta"},"Condition")," array")),(0,r.kt)("td",{parentName:"tr",align:null},"Conditions is the list of conditions that describe the current state of the Dataset.")))),(0,r.kt)("h3",{id:"gitsource"},"GitSource"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#datasetsource"},"DatasetSource")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#modelsource"},"ModelSource"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"url")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"URL to the git repository. Example: ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/substratusai/model-falcon-40b"},"https://github.com/substratusai/model-falcon-40b"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"path")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Path within the git repository referenced by url.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"branch")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"Branch is the git branch to use.")))),(0,r.kt)("h3",{id:"model"},"Model"),(0,r.kt)("p",null,"The Model API is used to build and train machine learning models. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Base models can be built from a Git repository. "),(0,r.kt)("li",{parentName:"ul"},"Models can be trained by combining a base Model with a Dataset.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"apiVersion")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"substratus.ai/v1"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"kind")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Model"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"metadata")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#objectmeta-v1-meta"},"ObjectMeta"))),(0,r.kt)("td",{parentName:"tr",align:null},"Refer to Kubernetes API documentation for fields of ",(0,r.kt)("inlineCode",{parentName:"td"},"metadata"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"spec")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#modelspec"},"ModelSpec"))),(0,r.kt)("td",{parentName:"tr",align:null},"Spec is the desired state of the Model.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"status")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#modelstatus"},"ModelStatus"))),(0,r.kt)("td",{parentName:"tr",align:null},"Status is the observed state of the Model.")))),(0,r.kt)("h3",{id:"modelcompute"},"ModelCompute"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#modelspec"},"ModelSpec"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"types")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#computetype"},"ComputeType")," array")),(0,r.kt)("td",{parentName:"tr",align:null},"Types is a list of supported compute types for this Model. This list should be ordered by preference, with the most preferred type first.")))),(0,r.kt)("h3",{id:"modelserver"},"ModelServer"),(0,r.kt)("p",null,"The ModelServer API is used to deploy a server that exposes the capabilities of a Model via a HTTP interface."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"apiVersion")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"substratus.ai/v1"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"kind")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ModelServer"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"metadata")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#objectmeta-v1-meta"},"ObjectMeta"))),(0,r.kt)("td",{parentName:"tr",align:null},"Refer to Kubernetes API documentation for fields of ",(0,r.kt)("inlineCode",{parentName:"td"},"metadata"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"spec")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#modelserverspec"},"ModelServerSpec"))),(0,r.kt)("td",{parentName:"tr",align:null},"Spec is the desired state of the ModelServer.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"status")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#modelserverstatus"},"ModelServerStatus"))),(0,r.kt)("td",{parentName:"tr",align:null},"Status is the observed state of the ModelServer.")))),(0,r.kt)("h3",{id:"modelserverspec"},"ModelServerSpec"),(0,r.kt)("p",null,"ModelServerSpec defines the desired state of ModelServer"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#modelserver"},"ModelServer"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"modelName")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"ModelName is the .metadata.name of the Model to be served.")))),(0,r.kt)("h3",{id:"modelserverstatus"},"ModelServerStatus"),(0,r.kt)("p",null,"ModelServerStatus defines the observed state of ModelServer"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#modelserver"},"ModelServer"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"conditions")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#condition-v1-meta"},"Condition")," array")),(0,r.kt)("td",{parentName:"tr",align:null},"Conditions is the list of conditions that describe the current state of the ModelServer.")))),(0,r.kt)("h3",{id:"modelsize"},"ModelSize"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#modelspec"},"ModelSpec"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"parameterCount")," ",(0,r.kt)("em",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:null},"ParameterCount is the number of parameters in the underlying model.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"parameterBits")," ",(0,r.kt)("em",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:null},"ParameterBits is the number of bits per parameter in the underlying model. Common values would be 8, 16, 32.")))),(0,r.kt)("h3",{id:"modelsource"},"ModelSource"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#modelspec"},"ModelSpec"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"git")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#gitsource"},"GitSource"))),(0,r.kt)("td",{parentName:"tr",align:null},"Git is a reference to a git repository containing model code.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"modelName")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"ModelName is the .metadata.name of another Model that this Model should be based on.")))),(0,r.kt)("h3",{id:"modelspec"},"ModelSpec"),(0,r.kt)("p",null,"ModelSpec defines the desired state of Model"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#model"},"Model"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"source")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#modelsource"},"ModelSource"))),(0,r.kt)("td",{parentName:"tr",align:null},"Source is a reference to the source of the model.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"training")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#modeltraining"},"ModelTraining"))),(0,r.kt)("td",{parentName:"tr",align:null},"Training should be set to run a training job.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"size")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#modelsize"},"ModelSize"))),(0,r.kt)("td",{parentName:"tr",align:null},"Size describes different size dimensions of the underlying model.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"compute")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#modelcompute"},"ModelCompute"))),(0,r.kt)("td",{parentName:"tr",align:null},"Compute describes the compute requirements and preferences of the model.")))),(0,r.kt)("h3",{id:"modelstatus"},"ModelStatus"),(0,r.kt)("p",null,"ModelStatus defines the observed state of Model"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#model"},"Model"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"containerImage")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"ContainerImage is reference to the container image that was built for this Model.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"servers")," ",(0,r.kt)("em",{parentName:"td"},"string array")),(0,r.kt)("td",{parentName:"tr",align:null},"Servers is the list of servers that are currently running this Model. Soon to be deprecated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"conditions")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#condition-v1-meta"},"Condition")," array")),(0,r.kt)("td",{parentName:"tr",align:null},"Conditions is the list of conditions that describe the current state of the Model.")))),(0,r.kt)("h3",{id:"modeltraining"},"ModelTraining"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#modelspec"},"ModelSpec"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"datasetName")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"DatasetName is the .metadata.name of the Dataset to use for training.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"params")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#modeltrainingparams"},"ModelTrainingParams"))),(0,r.kt)("td",{parentName:"tr",align:null},"Params is a list of hyperparameters to use for training.")))),(0,r.kt)("h3",{id:"modeltrainingparams"},"ModelTrainingParams"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#modeltraining"},"ModelTraining"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"epochs")," ",(0,r.kt)("em",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:null},"Epochs is the total number of iterations that should be run through the training data. Increasing this number will increase training time.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"dataLimit")," ",(0,r.kt)("em",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:null},"DataLimit is the maximum number of training records to use. In the case of JSONL, this would be the total number of lines to train with. Increasing this number will increase training time.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"batchSize")," ",(0,r.kt)("em",{parentName:"td"},"integer")),(0,r.kt)("td",{parentName:"tr",align:null},"BatchSize is the number of training records to use per (forward and backward) pass through the model. Increasing this number will increase the memory requirements of the training process.")))),(0,r.kt)("h3",{id:"notebook"},"Notebook"),(0,r.kt)("p",null,"The Notebook API can be used to quickly spin up a development environment backed by high performance compute. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Notebooks integrate with the Model and Dataset APIs allow for quick iteration. "),(0,r.kt)("li",{parentName:"ul"},"Notebooks can be synced to local directories to streamline developer experiences using Substratus kubectl plugins.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"apiVersion")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"substratus.ai/v1"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"kind")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Notebook"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"metadata")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#objectmeta-v1-meta"},"ObjectMeta"))),(0,r.kt)("td",{parentName:"tr",align:null},"Refer to Kubernetes API documentation for fields of ",(0,r.kt)("inlineCode",{parentName:"td"},"metadata"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"spec")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#notebookspec"},"NotebookSpec"))),(0,r.kt)("td",{parentName:"tr",align:null},"Spec is the observed state of the Notebook.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"status")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"#notebookstatus"},"NotebookStatus"))),(0,r.kt)("td",{parentName:"tr",align:null},"Status is the observed state of the Notebook.")))),(0,r.kt)("h3",{id:"notebookspec"},"NotebookSpec"),(0,r.kt)("p",null,"NotebookSpec defines the desired state of Notebook"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#notebook"},"Notebook"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"modelName")," ",(0,r.kt)("em",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:null},"ModelName is the .metadata.name of the Model that this Notebook should be sourced from.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"suspend")," ",(0,r.kt)("em",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:null},"Suspend should be set to true to stop the notebook (Pod) from running.")))),(0,r.kt)("h3",{id:"notebookstatus"},"NotebookStatus"),(0,r.kt)("p",null,"NotebookStatus defines the observed state of Notebook"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Appears in:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#notebook"},"Notebook"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"conditions")," ",(0,r.kt)("em",{parentName:"td"},(0,r.kt)("a",{parentName:"em",href:"https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.26/#condition-v1-meta"},"Condition")," array")),(0,r.kt)("td",{parentName:"tr",align:null},"Conditions is the list of conditions that describe the current state of the Notebook.")))))}k.isMDXComponent=!0}}]);