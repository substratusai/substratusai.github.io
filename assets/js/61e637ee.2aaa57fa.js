"use strict";(self.webpackChunksubstratus_website=self.webpackChunksubstratus_website||[]).push([[4760],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),g=r,m=p["".concat(l,".").concat(g)]||p[g]||d[g]||s;return n?a.createElement(m,o(o({ref:t},u),{},{components:n})):a.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=g;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},5461:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const s={sidebar_position:4},o="GCP Install Guide",i={unversionedId:"installation/gcp",id:"installation/gcp",title:"GCP Install Guide",description:"Subsratus required resources",source:"@site/docs/installation/gcp.md",sourceDirName:"installation",slug:"/installation/gcp",permalink:"/docs/installation/gcp",draft:!1,editUrl:"https://github.com/substratusai/substratusai.github.io/tree/main/docs/installation/gcp.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Installation Guide",permalink:"/docs/installation/"},next:{title:"Notebooks",permalink:"/docs/notebooks"}},l={},c=[{value:"Subsratus required resources",id:"subsratus-required-resources",level:2},{value:"Basic",id:"basic",level:2},{value:"Custom",id:"custom",level:2},{value:"Configure environment variables",id:"configure-environment-variables",level:3},{value:"1. (Optional) Create or re-use existing GKE cluster",id:"1-optional-create-or-re-use-existing-gke-cluster",level:3},{value:"2. Create or reuse existing GCS bucket",id:"2-create-or-reuse-existing-gcs-bucket",level:3},{value:"3. Create or reuse existing Google Artifact Registry",id:"3-create-or-reuse-existing-google-artifact-registry",level:3},{value:"4. Create or reuse an existing GCP Service Account",id:"4-create-or-reuse-an-existing-gcp-service-account",level:3},{value:"5. Assign the permissions needed to the GCP Service Account",id:"5-assign-the-permissions-needed-to-the-gcp-service-account",level:3},{value:"6. Deploy and configure Substratus operator",id:"6-deploy-and-configure-substratus-operator",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"gcp-install-guide"},"GCP Install Guide"),(0,r.kt)("h2",{id:"subsratus-required-resources"},"Subsratus required resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"GKE Cluster with GCSFuse and Workload Identity"),(0,r.kt)("li",{parentName:"ul"},"GCS Bucket to store Model and Dataset data"),(0,r.kt)("li",{parentName:"ul"},"Google Artifact Registry Container Repository to store newly built container images"),(0,r.kt)("li",{parentName:"ul"},"Google Service Account for:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"read/write access to GCS Bucket"),(0,r.kt)("li",{parentName:"ul"},"read/write access to to Artifact Registry"),(0,r.kt)("li",{parentName:"ul"},"setIamPolicy on Google ServiceAccount for managing cross namespace Workload Identity bindings")))),(0,r.kt)("h2",{id:"basic"},"Basic"),(0,r.kt)("p",null,"A basic automatic installer creates everything you would need in an empty GCP project.\nIt automatically creates the GKE cluster, GCS bucket, Artifact Registry and Service Account.\nThe script also ensures all required permissions are given to the Service Account."),(0,r.kt)("p",null,"This installation method is only intended to work in a basic GCP project free of any significant constraints (i.e. GCP Organizational Policies, etc)."),(0,r.kt)("p",null,"Run the automatic installer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export PROJECT_ID=$(gcloud config get project)\nbash <(curl https://raw.githubusercontent.com/substratusai/substratus/main/install/gcp/up.sh)\n")),(0,r.kt)("h2",{id:"custom"},"Custom"),(0,r.kt)("p",null,"The customizable step by step install lets you use your existing resources (e.g. GKE cluster, bucket and GAR) and other resources instead\nof having Substratus automatically do everything for you. Users in restricted environments\nor who need to re-use existing resources are encouraged to use the advanced install."),(0,r.kt)("p",null,"You will be going through the following steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create or reuse a K8s cluster and configure it according to needs of Substratus"),(0,r.kt)("li",{parentName:"ol"},"Create or reuse an existing Cloud Bucket"),(0,r.kt)("li",{parentName:"ol"},"Create or reuse an existing Container Image Registry"),(0,r.kt)("li",{parentName:"ol"},"Create or reuse an existing GCP Service Account"),(0,r.kt)("li",{parentName:"ol"},"Assign the permissions needed to the GCP Service Account"),(0,r.kt)("li",{parentName:"ol"},"Deploy and configure the Substratus operator")),(0,r.kt)("h3",{id:"configure-environment-variables"},"Configure environment variables"),(0,r.kt)("p",null,"Lets configure a few basic environment variables that will be used throughout\nthe various steps:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"export PROJECT_ID=$(gcloud config get project)\nexport REGION=us-central1\nexport ZONE=us-central1-a\n")),(0,r.kt)("h3",{id:"1-optional-create-or-re-use-existing-gke-cluster"},"1. (Optional) Create or re-use existing GKE cluster"),(0,r.kt)("p",null,"Substratus has the following requirements for a GKE cluster:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"GCSfuse addon is enabled"),(0,r.kt)("li",{parentName:"ul"},"Workload Identity is enabled"),(0,r.kt)("li",{parentName:"ul"},"(optional) Ability to utilize GPU nodes")),(0,r.kt)("p",null,"You can skip this step if you already have a cluster that meets those requirements."),(0,r.kt)("p",null,"Set the name of your cluster:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export CLUSTER_NAME=substratus\n")),(0,r.kt)("p",null,"Create a new GKE cluster using gcloud:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gcloud container clusters create ${CLUSTER_NAME} --location ${REGION} \\\n  --machine-type n2d-standard-8 --num-nodes 1 --min-nodes 1 --max-nodes 5 \\\n  --node-locations ${ZONE} --workload-pool ${PROJECT_ID}.svc.id.goog \\\n  --enable-image-streaming --enable-shielded-nodes --shielded-secure-boot \\\n  --shielded-integrity-monitoring --enable-autoprovisioning \\\n  --max-cpu 960 --max-memory 9600 --ephemeral-storage-local-ssd=count=2 \\\n  --autoprovisioning-scopes=logging.write,monitoring,devstorage.read_only,compute \\\n  --addons GcsFuseCsiDriver\n")),(0,r.kt)("p",null,"Configure a maintenance exclusion so GKE doesn't randomly start upgrading your nodes:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'START=$(date -I --date="-1 day")\nEND=$(date -I --date="+160 days")\ngcloud container clusters update ${CLUSTER_NAME} --region ${REGION} \\\n    --add-maintenance-exclusion-name notouchy \\\n    --add-maintenance-exclusion-start ${START} \\\n    --add-maintenance-exclusion-end ${END} \\\n    --add-maintenance-exclusion-scope no_minor_or_node_upgrades\n')),(0,r.kt)("p",null,"Create new GPU nodepools (e.g. L4 GPU nodepools):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'nodepool_args=(--spot --enable-autoscaling --enable-image-streaming\n  --num-nodes=0 --min-nodes=0 --max-nodes=3 --cluster ${CLUSTER_NAME}\n  --node-locations ${REGION}-a,${REGION}-b --region ${REGION} --async)\n\ngcloud container node-pools create g2-standard-8 \\\n  --accelerator type=nvidia-l4,count=1,gpu-driver-version=latest \\\n  --machine-type g2-standard-8 --ephemeral-storage-local-ssd=count=1 \\\n  "${nodepool_args[@]}"\n\ngcloud container node-pools create g2-standard-24 \\\n  --accelerator type=nvidia-l4,count=2,gpu-driver-version=latest \\\n  --machine-type g2-standard-24 --ephemeral-storage-local-ssd=count=2 \\\n  "${nodepool_args[@]}"\n\ngcloud container node-pools create g2-standard-48 \\\n  --accelerator type=nvidia-l4,count=4,gpu-driver-version=latest \\\n  --machine-type g2-standard-48 --ephemeral-storage-local-ssd=count=4 \\\n  "${nodepool_args[@]}"\n')),(0,r.kt)("h3",{id:"2-create-or-reuse-existing-gcs-bucket"},"2. Create or reuse existing GCS bucket"),(0,r.kt)("p",null,"Substratus recommends using a GCS bucket in the same region\nas the GKE cluster. This GCS bucket will be used for storing\nML models and datasets."),(0,r.kt)("p",null,"Specify the URL of the bucket you wish to use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'export ARTIFACTS_BUCKET="gs://${PROJECT_ID}-substratus-artifacts"\n')),(0,r.kt)("p",null,"Create the bucket if needed"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'gcloud storage buckets create "${ARTIFACTS_BUCKET}" --location ${REGION}\n')),(0,r.kt)("h3",{id:"3-create-or-reuse-existing-google-artifact-registry"},"3. Create or reuse existing Google Artifact Registry"),(0,r.kt)("p",null,"Substratus uses the Google Artifact Registry to push new images\nand pull images. You can reuse an existing one or create a new one."),(0,r.kt)("p",null,"Specify the repository you wish to use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export GAR_REPO_NAME=substratus\nexport REGISTRY_URL=${REGION}-docker.pkg.dev/${PROJECT_ID}/${GAR_REPO_NAME}\n")),(0,r.kt)("p",null,"Create a new GAR repo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gcloud artifacts repositories create ${GAR_REPO_NAME} \\\n  --repository-format=docker --location=${REGION}\n")),(0,r.kt)("h3",{id:"4-create-or-reuse-an-existing-gcp-service-account"},"4. Create or reuse an existing GCP Service Account"),(0,r.kt)("p",null,"Substratus uses a GCP Service Account to authenticate to the GCS Bucket\nthat hosts the Model and Datasets data."),(0,r.kt)("p",null,"Specify the service account you wish to use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'export SERVICE_ACCOUNT_NAME=substratus\nexport SERVICE_ACCOUNT="${SERVICE_ACCOUNT_NAME}@${PROJECT_ID}.iam.gserviceaccount.com"\n')),(0,r.kt)("p",null,"Create a new service account:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"gcloud iam service-accounts create ${SERVICE_ACCOUNT_NAME}\n")),(0,r.kt)("h3",{id:"5-assign-the-permissions-needed-to-the-gcp-service-account"},"5. Assign the permissions needed to the GCP Service Account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'gcloud storage buckets add-iam-policy-binding ${ARTIFACTS_BUCKET} \\\n  --member="serviceAccount:${SERVICE_ACCOUNT}" --role=roles/storage.admin\n\ngcloud artifacts repositories add-iam-policy-binding substratus \\\n  --location us-central1 --member="serviceAccount:${SERVICE_ACCOUNT}" \\\n  --role=roles/artifactregistry.admin\n\n# Allow the Service Account to bind K8s Service Account to this Service Account\ngcloud iam service-accounts add-iam-policy-binding ${SERVICE_ACCOUNT} \\\n   --role roles/iam.serviceAccountAdmin --member "serviceAccount:${SERVICE_ACCOUNT}"\n\n# Allow to create signed URLs\ngcloud iam service-accounts add-iam-policy-binding ${SERVICE_ACCOUNT} \\\n   --role roles/iam.serviceAccountTokenCreator \\\n   --member "serviceAccount:${SERVICE_ACCOUNT}"\n\ngcloud iam service-accounts add-iam-policy-binding ${SERVICE_ACCOUNT} \\\n   --role roles/iam.workloadIdentityUser \\\n   --member "serviceAccount:${PROJECT_ID}.svc.id.goog[substratus/sci]"\n')),(0,r.kt)("h3",{id:"6-deploy-and-configure-substratus-operator"},"6. Deploy and configure Substratus operator"),(0,r.kt)("p",null,"Create the namespace for the operator (needs to be substratus):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create ns substratus\n")),(0,r.kt)("p",null,"Create a ConfigMap that references the resources from step 2 to 5 by using\nthe environment variables that you set."),(0,r.kt)("p",null,"Verify the environment variables have been set correctly:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},'echo "ARTIFACTS_BUCKET: ${ARTIFACTS_BUCKET}"\necho "REGISTRY_URL: ${REGISTRY_URL}"\necho "PRINCIPAL: ${SERVICE_ACCOUNT}"\n')),(0,r.kt)("p",null,"Run the following to create the ConfigMap:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f - << EOF\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: system\n  namespace: substratus\ndata:\n  CLOUD: gcp\n  ARTIFACT_BUCKET_URL: ${ARTIFACTS_BUCKET}\n  REGISTRY_URL: ${REGISTRY_URL}\n  PRINCIPAL: ${SERVICE_ACCOUNT}\nEOF\n")),(0,r.kt)("p",null,"Deploy the Substratus operator:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f https://raw.githubusercontent.com/substratusai/substratus/main/install/gcp/manifests.yaml\n")))}d.isMDXComponent=!0}}]);